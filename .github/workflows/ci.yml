name: Critical Errors CI (Aligned with Pre-commit)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-critical:
    name: üé® Frontend Critical Errors Only
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: TypeScript critical check (same as pre-commit)
      run: npm run type-check

    - name: Build test (critical compilation check)
      run: npm run build

  python-critical:
    name: üêç Python Critical Errors Only
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Python syntax check (same as pre-commit)
      run: |
        cd src-python
        python -c "import py_compile, glob; [py_compile.compile(f, doraise=True) for f in glob.glob('*.py')]"

  rust-critical:
    name: ü¶Ä Rust Critical Errors Only
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Rust compilation check (same as pre-commit)
      run: |
        cd src-tauri
        cargo check --quiet --message-format=short

  critical-checks-complete:
    name: ‚úÖ All Critical Checks Passed
    runs-on: ubuntu-latest
    needs: [frontend-critical, python-critical, rust-critical]

    steps:
    - name: Success summary
      run: |
        echo "üéâ All critical checks passed - build is safe to proceed!"
        echo ""
        echo "üìä Results:"
        echo "  Frontend: ${{ needs.frontend-critical.result }}"
        echo "  Python: ${{ needs.python-critical.result }}"
        echo "  Rust: ${{ needs.rust-critical.result }}"
        echo ""
        echo "üí° This pipeline only checks for build-breaking errors"
        echo "üîç For detailed warnings analysis, run: npm run analyze:warnings"
