name: Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        npm ci
        cd src-python && pip install -e .

    - name: Create validation report
      id: validation
      run: |
        echo "# üîç Pull Request Validation Report" > validation_report.md
        echo "" >> validation_report.md
        echo "## Summary" >> validation_report.md
        echo "" >> validation_report.md

        # Initialize counters
        TOTAL_ERRORS=0
        TOTAL_WARNINGS=0

        # Frontend validation
        echo "## üé® Frontend Validation" >> validation_report.md
        echo "" >> validation_report.md

        # Build test (most important)
        echo "### Build Test" >> validation_report.md
        if npm run build > build.log 2>&1; then
          echo "‚úÖ **PASSED** - Frontend builds successfully" >> validation_report.md
        else
          echo "‚ùå **FAILED** - Build errors found:" >> validation_report.md
          echo '```' >> validation_report.md
          head -20 build.log >> validation_report.md
          echo '```' >> validation_report.md
          TOTAL_ERRORS=$((TOTAL_ERRORS + 1))
        fi
        echo "" >> validation_report.md

        # TypeScript type checking (allow warnings)
        echo "### TypeScript Type Checking" >> validation_report.md
        if npm run type-check > type_check.log 2>&1; then
          echo "‚úÖ **PASSED** - No type errors found" >> validation_report.md
        else
          echo "‚ö†Ô∏è **WARNINGS** - Type issues found:" >> validation_report.md
          echo '```' >> validation_report.md
          head -10 type_check.log >> validation_report.md
          echo '```' >> validation_report.md
          TOTAL_WARNINGS=$((TOTAL_WARNINGS + 1))
        fi
        echo "" >> validation_report.md

        # Python validation
        echo "## üêç Python Backend Validation" >> validation_report.md
        echo "" >> validation_report.md

        cd src-python

        # Python syntax check
        echo "### Python Syntax Check" >> ../validation_report.md
        if python -m py_compile *.py > ../python_syntax.log 2>&1; then
          echo "‚úÖ **PASSED** - No Python syntax errors" >> ../validation_report.md
        else
          echo "‚ö†Ô∏è **WARNINGS** - Python syntax issues found:" >> ../validation_report.md
          echo '```' >> ../validation_report.md
          cat ../python_syntax.log >> ../validation_report.md
          echo '```' >> ../validation_report.md
          TOTAL_WARNINGS=$((TOTAL_WARNINGS + 1))
        fi
        echo "" >> ../validation_report.md

        cd ..

        # Rust validation
        echo "## ü¶Ä Rust Backend Validation" >> validation_report.md
        echo "" >> validation_report.md

        cd src-tauri

        # Rust check
        echo "### Rust Check" >> ../validation_report.md
        if cargo check > ../rust_check.log 2>&1; then
          echo "‚úÖ **PASSED** - Rust code compiles" >> ../validation_report.md
        else
          echo "‚ö†Ô∏è **WARNINGS** - Rust compilation issues found:" >> ../validation_report.md
          echo '```' >> ../validation_report.md
          head -15 ../rust_check.log >> ../validation_report.md
          echo '```' >> ../validation_report.md
          TOTAL_WARNINGS=$((TOTAL_WARNINGS + 1))
        fi
        echo "" >> ../validation_report.md

        cd ..

        # Final summary
        echo "## üìä Final Summary" >> validation_report.md
        echo "" >> validation_report.md
        echo "- **Total Errors:** $TOTAL_ERRORS" >> validation_report.md
        echo "- **Total Warnings:** $TOTAL_WARNINGS" >> validation_report.md
        echo "" >> validation_report.md

        if [ $TOTAL_ERRORS -eq 0 ]; then
          echo "üéâ **Build successful!** This PR is ready for review." >> validation_report.md
          echo "validation_status=success" >> $GITHUB_OUTPUT
        else
          echo "‚ùå **Build failed!** Please fix the errors above before merging." >> validation_report.md
          echo "validation_status=failure" >> $GITHUB_OUTPUT
        fi

        echo "total_errors=$TOTAL_ERRORS" >> $GITHUB_OUTPUT
        echo "total_warnings=$TOTAL_WARNINGS" >> $GITHUB_OUTPUT

    - name: Comment PR with validation report
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('validation_report.md', 'utf8');

          // Find existing comment
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });

          const botComment = comments.data.find(comment =>
            comment.user.type === 'Bot' &&
            comment.body.includes('üîç Pull Request Validation Report')
          );

          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: report
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: report
            });
          }

    - name: Fail if validation errors found
      if: steps.validation.outputs.validation_status == 'failure'
      run: |
        echo "‚ùå Validation failed with ${{ steps.validation.outputs.total_errors }} errors"
        echo "Note: Warnings are allowed, only errors will fail the build"
        exit 1
