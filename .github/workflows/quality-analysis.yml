name: Quality Analysis and Warnings Report

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  quality-analysis:
    name: Complete Quality Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run complete validation
      run: npm run validate
      continue-on-error: true

    - name: Analyze warnings
      run: npm run analyze:warnings
      continue-on-error: true

    - name: Upload warnings report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: warnings-report
        path: warnings-report.md
        retention-days: 30

    - name: Comment PR with warnings summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            if (fs.existsSync('warnings-report.md')) {
              const report = fs.readFileSync('warnings-report.md', 'utf8');
              const body = [
                '## Warnings Analysis Report - eFlood2',
                '',
                report.substring(0, 1000) + '...',
                '',
                '**Full report available in workflow artifacts**',
                '',
                '**For local analysis**: `npm run analyze:warnings`'
              ].join('\n');

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } else {
              console.log('Warnings report file not found');
            }
          } catch (error) {
            console.log('Could not read warnings report:', error.message);
          }

  python-quality:
    name: Python Quality Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install UV
      run: pip install uv

    - name: Install Python dependencies
      run: |
        cd src-python
        uv sync

    - name: Run complete Python validation
      run: |
        cd src-python
        uv run black --check . || echo "Black formatting issues found"
        uv run isort --check-only . || echo "Import sorting issues found"
        uv run flake8 . || echo "Flake8 issues found"
        uv run mypy . || echo "MyPy issues found"
      continue-on-error: true

  rust-quality:
    name: Rust Quality Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Run complete Rust validation
      run: |
        cd src-tauri
        cargo fmt --all -- --check || echo "Rust formatting issues found"
        cargo clippy --all-targets --all-features -- -D warnings || echo "Clippy issues found"
        cargo test || echo "Test issues found"
      continue-on-error: true
